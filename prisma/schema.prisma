generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id                  Int      @id @default(autoincrement())
  Name                String
  Company_Description String
  email               String
  password            String
  Location            String
  Contact_Number      String
  Organisation        String
  Designation         String?
  Linkedin_Profiles   String?
  created_at          DateTime @default(now())
  uid                 String?
  jobs                Job[]
}

enum JobStatus {
  Active
  Inactive
}

model Job {
  id                  Int        @id @default(autoincrement())
  created_at          DateTime   @default(now())
  company_id          Int
  Title               String
  Referral_Payout     Int
  Number_of_positions Int
  Location            String
  Salary              Int
  Joining_Date        DateTime
  Status              JobStatus
  user_jobs           User_Job[]
  company             Company    @relation(fields: [company_id], references: [id])
}

model User {
  id                Int        @id @default(autoincrement())
  created_at        DateTime   @default(now())
  name              String
  email             String
  password          String
  Linkedin_Profiles String?
  Current_Company   String
  Location          String
  Contact_Number    String
  firebase_token    String?
  is_Company        Boolean
  is_Social         Boolean
  Platform          String?
  Uid               String?    @unique
  user_jobs         User_Job[]
}

enum Status {
  Accept
  Reject
  Interview
  Offered
  Duplicate
}

model User_Job {
  id                 Int      @id @default(autoincrement())
  created_at         DateTime @default(now())
  user_id            Int
  user               User     @relation(fields: [user_id], references: [id])
  candidate_email    String
  job_id             Int
  job                Job      @relation(fields: [job_id], references: [id])
  cv                 Bytes?
  application_status Status
  remark             String?
}
